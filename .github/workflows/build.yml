name: Build Executables

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, ubuntu-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r server/requirements.txt
          pip install pyinstaller

      - name: Build (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          powershell -ExecutionPolicy Bypass -File server/build.ps1 -Name nfa95

      - name: Build (Linux)
        if: runner.os == 'Linux'
        shell: bash
        run: |
          docker run --rm -v "$GITHUB_WORKSPACE":/src -w /src quay.io/pypa/manylinux2014_x86_64 \
            /bin/bash -lc '
              set -euo pipefail;
              yum -y install wget curl make gcc zlib-devel bzip2-devel libffi-devel xz-devel sqlite-devel readline-devel tk-devel perl;
              # Build OpenSSL (Python 3.11 requires >= 1.1.1)
              OPENSSL_VER=1.1.1w;
              cd /tmp && curl -fsSLO https://www.openssl.org/source/openssl-${OPENSSL_VER}.tar.gz && tar xf openssl-${OPENSSL_VER}.tar.gz;
              cd openssl-${OPENSSL_VER};
              ./config --prefix=/opt/openssl --openssldir=/opt/openssl -fPIC;
              make -j2 && make install_sw;
              export OPENSSL_DIR=/opt/openssl;
              export CPPFLAGS="-I${OPENSSL_DIR}/include";
              export LDFLAGS="-Wl,-rpath,${OPENSSL_DIR}/lib -L${OPENSSL_DIR}/lib";
              export PKG_CONFIG_PATH="${OPENSSL_DIR}/lib/pkgconfig";
              # Build shared CPython
              PY_VER=3.11.9;
              cd /tmp && curl -fsSLO https://www.python.org/ftp/python/${PY_VER}/Python-${PY_VER}.tgz && tar xf Python-${PY_VER}.tgz;
              cd Python-${PY_VER};
              ./configure --enable-optimizations --enable-shared --with-openssl=${OPENSSL_DIR} --prefix=/opt/python/cp311-shared;
              make -j2 && make install;
              echo "/opt/openssl/lib" > /etc/ld.so.conf.d/openssl.conf && ldconfig;
              echo "/opt/python/cp311-shared/lib" > /etc/ld.so.conf.d/python.conf && ldconfig;
              export PATH="/opt/python/cp311-shared/bin:$PATH";
              export LD_LIBRARY_PATH="/opt/python/cp311-shared/lib:${OPENSSL_DIR}/lib:$LD_LIBRARY_PATH";
              cd /src;
              python3 -m pip install --upgrade pip;
              python3 -m pip install -r server/requirements.txt pyinstaller;
              chmod +x server/build.sh;
              ./server/build.sh nfa95;
            '

      - name: Upload Artifact (Windows)
        if: runner.os == 'Windows'
        uses: actions/upload-artifact@v4
        with:
          name: nfa95-windows-x64
          path: dist/nfa95.exe

      - name: Upload Artifact (Linux)
        if: runner.os == 'Linux'
        uses: actions/upload-artifact@v4
        with:
          name: nfa95-linux-x64
          path: dist/nfa95
