name: Release Executables

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install deps
        shell: pwsh
        run: |
          python -m pip install --upgrade pip
          pip install -r server/requirements.txt
          pip install pyinstaller

      - name: Build Windows exe
        shell: pwsh
        run: |
          powershell -ExecutionPolicy Bypass -File server/build.ps1 -Name nfa95

      - name: Upload Artifact (Windows)
        uses: actions/upload-artifact@v4
        with:
          name: nfa95-windows-x64
          path: |
            dist/nfa95.exe
            dist/.env.example

  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build Linux binary in manylinux2014 (glibc 2.17)
        shell: bash
        run: |
          docker run --rm -v "$GITHUB_WORKSPACE":/src -w /src quay.io/pypa/manylinux2014_x86_64 \
            /bin/bash -lc '
              set -euo pipefail;
              yum -y install wget make gcc openssl-devel zlib-devel bzip2-devel libffi-devel xz-devel sqlite-devel readline-devel tk-devel;
              PY_VER=3.11.9;
              cd /tmp && curl -fsSLO https://www.python.org/ftp/python/${PY_VER}/Python-${PY_VER}.tgz && tar xf Python-${PY_VER}.tgz;
              cd Python-${PY_VER};
              ./configure --enable-optimizations --enable-shared --prefix=/opt/python/cp311-shared;
              make -j2 && make install;
              export PATH="/opt/python/cp311-shared/bin:$PATH";
              export LD_LIBRARY_PATH="/opt/python/cp311-shared/lib:$LD_LIBRARY_PATH";
              python3 -m pip install --upgrade pip;
              python3 -m pip install -r server/requirements.txt pyinstaller;
              chmod +x server/build.sh;
              ./server/build.sh nfa95;
            '

      - name: Upload Artifact (Linux)
        uses: actions/upload-artifact@v4
        with:
          name: nfa95-linux-x64
          path: |
            dist/nfa95
            dist/.env.example

  release:
    runs-on: ubuntu-latest
    needs: [build-windows, build-linux]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download Windows artifact
        uses: actions/download-artifact@v4
        with:
          name: nfa95-windows-x64
          path: ./artifacts/windows

      - name: Download Linux artifact
        uses: actions/download-artifact@v4
        with:
          name: nfa95-linux-x64
          path: ./artifacts/linux

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          draft: false
          prerelease: false
          files: |
            artifacts/windows/nfa95.exe
            artifacts/linux/nfa95
            server/.env.example
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
